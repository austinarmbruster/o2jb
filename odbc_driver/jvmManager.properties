# Copyright 2015 AnaVation, LLC. 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# class.<class tag>=<packageed class name>
# e.g. class.conn=java/sql/Connection
# NOTE:  the packages are separated by / not .
class.cls=java/lang/Class
class.clsLoader=java/lang/ClassLoader
class.string=java/lang/String
class.ds=org/apache/commons/dbcp/BasicDataSource
class.dm=java/sql/DriverManager
class.conn=java/sql/Connection
class.stmt=java/sql/Statement
class.ps=java/sql/PreparedStatement
class.rs=java/sql/ResultSet
class.rsmd=java/sql/ResultSetMetaData
class.dbmd=java/sql/DatabaseMetaData

init.ds.defCon=<init>()V

# method.<class tag>.<method tag>.<method name><method signature>
# e.g. method.conn.createStatement=createStatement()Ljava/sql/Statement;

method.ds.setDriver=setDriverClassName(Ljava/lang/String;)V
method.ds.setUrl=setUrl(Ljava/lang/String;)V
method.ds.setUser=setUsername(Ljava/lang/String;)V
method.ds.setPwd=setPassword(Ljava/lang/String;)V
method.ds.getConn=getConnection()Ljava/sql/Connection;

method.conn.createStatement=createStatement()Ljava/sql/Statement;
method.conn.prepareStatement=prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
method.conn.getDbmd=getMetaData()Ljava/sql/DatabaseMetaData;
method.conn.close=close()V

method.stmt.execUpdate=executeUpdate(Ljava/lang/String;)I
method.stmt.execQuery=executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
method.stmt.close=close()V

method.rs.next=next()Z
method.rs.str=getString(I)Ljava/lang/String;
method.rs.metaData=getMetaData()Ljava/sql/ResultSetMetaData;
method.rs.close=close()V

method.rsmd.numCols=getColumnCount()I
method.rsmd.colDisplaySize=getColumnDisplaySize(I)I
method.rsmd.colType=getColumnType(I)I
method.rsmd.colName=getColumnName(I)Ljava/lang/String;

method.ps.str=setString(ILjava/lang/String;)V
method.ps.execUpdate=executeUpdate()I
method.ps.execQuery=executeQuery()Ljava/sql/ResultSet;
method.ps.close=close()V

method.dbmd.getTables=getTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;

staticMethod.cls.forName=forName(Ljava/lang/String;)Ljava/lang/Class;
staticMethod.clsLoader.sysLoader=getSystemClassLoader()Ljava/lang/ClassLoader;

class.th=java/lang/Throwable
class.ste=java/lang/StackTraceElement
method.th.cause=getCause()Ljava/lang/Throwable;
method.th.st=getStackTrace()[Ljava/lang/StackTraceElement;
method.th.toStr=toString()Ljava/lang/String;
method.ste.toStr=toString()Ljava/lang/String;